def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
        abortOnError false

    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.bholdhealth.medicaid"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

configurations.all {
    resolutionStrategy {
        force 'com.android.support:support-v4:27.1.0'
    }
}

dependencies {

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation "com.android.support:support-core-utils:28.0.0"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':voicesdk')
    implementation project(':voicesdk-verify')
    implementation project(':voicesdk-antispoof2')
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'com.skyfishjy.ripplebackground:library:1.0.1'
    implementation 'commons-io:commons-io:2.6'
//    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:support-core-ui:28.0.0'
    implementation 'com.github.alxrm:audiowave-progressbar:0.9.2'
    implementation 'com.github.GrenderG:Toasty:1.3.0'
    implementation 'me.srodrigo:androidhintspinner:1.0.0'

    implementation 'com.google.firebase:firebase-core:16.0.1'

    implementation 'com.google.code.gson:gson:2.8.5'

    implementation 'com.opencsv:opencsv:4.1'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.16'
    dependencies {
        implementation 'com.android.support:cardview-v7:28.0.0'
    }
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation project(':idsdk')

    implementation 'com.android.support:support-compat:28.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    apply plugin: 'com.google.gms.google-services'
}
